type Programme @model @search {
  name: String! @unique
  category: String @default(value: "junior")
  description: String
  start: Date!
  end: Date!
  maxPerSession: Int @default(value: 20)
  open: Boolean @default(value: true)
  attendees: [Attendee]
  sessions: [Session]
  coaches: [ProgrammeCoach]
  dates: [ProgrammeDate]
  prices: [ProgrammePrice]
  notes: [ProgrammeNote]
  launched: Boolean @default(value: false)
}

type Session @model @search {
  programme: Programme!
  date: Date!
  start: DateTime!
  end: DateTime!
  description: String
  hosts: [SessionCoach]
  attendees: [SessionAttendee]
}

type ProgrammeCoach @model @search {
  programme: Programme!
  coach: Coach!
}

type SessionCoach @model @search {
  session: Session!
  coach: Coach!
}

type SessionAttendee @model @search {
  session: Session!
  attendee: Attendee!
}

type Coach @model @search {
  name: String! @unique
  email: Email!
  mobile: PhoneNumber
  bio: String
}

type Player @model @search {
  name: String! @unique
  email: Email!
  mobile: String
  member: Boolean @default(value: false)
  card: String
  notes: [PlayerNote]
  data: JSON
}

type PlayerNote @model @search {
  note: String!
  player: Player!
}

type ProgrammeNote @model @search {
  note: String!
  player: Player!
}

type Alumni @model @search {
  name: String! @unique
  email: Email
  mobile: String
  bio: String
  psa: String
}

type Attendee @model {
  programme: Programme!
  player: Player!
  payment: AttendeePayment
}

type Payment @model @search {
  booking: String! @unique
  time: DateTime!
  price: Float
  quantity: Int
  unitPrice: Float
  inCash: Boolean @default(value: false)
}

type AttendeePayment @model {
  attendee: Attendee!
  payment: Payment!
}

type ProgrammeDate @model {
  programme: Programme!
  date: Date!
  start: DateTime!
  end: DateTime!
  repeatable: Boolean @default(value: false)
}

type Price @model {
  threshold: Int! @default(value: 1)
  unitPrice: Float
}

type ProgrammePrice @model {
  programme: Programme!
  price: Price!
}
